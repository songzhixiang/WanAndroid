apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'


// 加载 keystore.properties 文件
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.andysong.wanandroid"

        minSdkVersion rootProject.ext.android["minSdkVersion"]

        targetSdkVersion rootProject.ext.android["targetSdkVersion"]

        versionCode rootProject.ext.android["versionCode"]

        versionName rootProject.ext.android["versionName"]

        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        resConfigs "zh-rCN"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86','armeabi-v7a' //项目上，基本上适配armeabi这两个就够了，x86是针对虚拟机适配的，在后面可以关闭
        }

    }


    signingConfigs {
        release {
            storeFile file(keystoreProperties['RELEASE_STORE_FILE'])
            storePassword keystoreProperties['RELEASE_KEYSTORE_PASSWORD']
            keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
            keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
        }
    }

    buildTypes {

        release {
            //签名配置
            signingConfig signingConfigs.release
            //混淆编译
            minifyEnabled false
//            //开启压缩
//            zipAlignEnabled true
//            //移除无用的资源文件
//            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }


        debug {

        }
    }


    dexOptions{
        jumboMode = true
        javaMaxHeapSize "4g"
        preDexLibraries = false
        additionalParameters = [
                //配置Multidex参数
                '--multi-dex',//多dex分包
                '--set-max-idx-number=50000',//每个包方法数上限
                '--main-dex-list='+'/multidex-config.txt',//打包到主class.dex的文件列表
                '--minimal-main-dex'
        ]
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies["appcompat-v7"]

    implementation rootProject.ext.dependencies["recyclerview-v7"]

    implementation rootProject.ext.dependencies["percent"]

    implementation rootProject.ext.dependencies["cardview-v7"]

    implementation rootProject.ext.dependencies["design"]

    implementation rootProject.ext.dependencies["fragmentation"]

    implementation rootProject.ext.dependencies["utilcode"]

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation rootProject.ext.dependencies["butterknife"]

    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    implementation rootProject.ext.dependencies["dagger2"]

    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]

    implementation rootProject.ext.dependencies["okhttp3"]

    implementation rootProject.ext.dependencies["interceptor"]

    implementation rootProject.ext.dependencies["retrofit"]

    implementation rootProject.ext.dependencies["retrofit-converter-gson"]

    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava2"]

    implementation rootProject.ext.dependencies["utilcode"]

    implementation 'com.youth.banner:banner:1.4.10'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40'

    implementation 'com.jeremyliao:live-event-bus:1.2.3'

    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'

    implementation 'com.github.zzz40500:android-shapeLoadingView:1.0.3.2'

    implementation 'com.just.agentweb:agentweb:4.0.3-alpha@aar'

    implementation 'com.jakewharton:disklrucache:2.0.2'


    implementation 'com.android.support:multidex:1.0.3'

    implementation project(path: ':library')

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-1'



    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.0'


    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'


    //tinker的核心库
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'

    //美团多渠道打包
    implementation 'com.meituan.android.walle:library:1.1.6'

    implementation 'org.aspectj:aspectjrt:1.8+'


}

apply plugin: 'walle'

apply plugin:'android-aspectjx'

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}



// 依赖插件脚本
apply from: 'tinker-support.gradle'

